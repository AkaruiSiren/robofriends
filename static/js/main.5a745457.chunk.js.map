{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","height","children","App","onSearchChange","event","setState","target","value","state","fetch","then","response","json","users","this","filteredRobots","filter","robot","toLowerCase","includes","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAeeA,EAbF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,GAE3B,OACC,sBAAKC,UAAU,sDAAf,UACC,qBAAKC,IAAI,QAAQC,IAAG,+BAA0BH,EAA1B,mBACpB,gCACC,6BAAKF,IACL,4BAAIC,WCcOK,EApBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAElB,OACG,8BAEAA,EAAOC,KAAI,SAACC,EAAKC,GAChB,OACC,cAAC,EAAD,CAECR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHZM,EAAOG,GAAGR,UCKPS,EAdG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAEhC,OACC,qBAAKV,UAAU,MAAf,SACC,uBACCA,UAAU,mCACVW,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCACI,EARA,SAACC,GACf,OACC,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAQ,SAA1C,SACEH,EAAMI,YCyDKC,G,wDArDd,aAAe,IAAD,8BACb,gBAcDC,eAAiB,SAACC,GACjB,EAAKC,SAAS,CAAEd,YAAaa,EAAME,OAAOC,SAd1C,EAAKC,MAAQ,CACZtB,OAAQ,GACRK,YAAa,IAJD,E,gEAQO,IAAD,OACnBkB,MAAM,8CACJC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKR,SAAS,CAACnB,OAAQ2B,S,+BAQhC,MAEuBC,KAAKN,MAA5BtB,EAFA,EAEAA,OAAQK,EAFR,EAEQA,YAETwB,EAAiB7B,EAAO8B,QAAQ,SAAAC,GACrC,OAAOA,EAAMtC,KAAKuC,cAAcC,SAAS5B,EAAY2B,kBAiBtD,OAAQhC,EAAOkC,OAEb,sBAAKtC,UAAU,KAAf,UACA,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWU,aAAcsB,KAAKX,iBAC9B,cAAC,EAAD,UACC,cAAC,EAAD,CAAUjB,OAAQ6B,SALnB,gD,GA5CcM,cCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.5a745457.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({name, email, id}) => { //props = parameters to pass in properties, destructing inside parameters\r\n\r\n\treturn (\r\n\t\t<div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\t\t\t\r\n\t\t\t<img alt='robot' src={`https://robohash.org/${id}?size=200x200`}/>\r\n\t\t\t<div>\r\n\t\t\t\t<h2>{name}</h2>\r\n\t\t\t\t<p>{email}</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card'; //has robots\r\n\r\nconst CardList = ({robots}) => {\r\n\r\n\treturn (\r\n\t  \t<div>\r\n\t\t    {\r\n\t\t\t\trobots.map((user,i) => { //mapping each array item from robots \r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Card \r\n\t\t\t\t\t\t\tkey={robots[i].id} \r\n\t\t\t\t\t\t\tid={robots[i].id} \r\n\t\t\t\t\t\t\tname={robots[i].name} \r\n\t\t\t\t\t\t\temail={robots[i].email}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t);\r\n\t\t\t\t})\r\n\t\t    }\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({searchfield, searchChange}) => {\r\n\r\n\treturn (\r\n\t\t<div className='pa2'>\r\n\t\t\t<input \r\n\t\t\t\tclassName='pa3 ba b--green bg-lightest-blue' \r\n\t\t\t\ttype='search' \r\n\t\t\t\tplaceholder='search robots' \r\n\t\t\t\tonChange={searchChange}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n\treturn (\r\n\t\t<div style={{overflowY: 'scroll', height: '500px'}}>\r\n\t\t\t{props.children}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Scroll;","import React, {Component} from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\n//import { robots } from './robots';\r\nimport './app.css';\r\n\r\nclass App extends Component {\r\n\r\n\tconstructor() { //prebuild constructor method\r\n\t\tsuper();\r\n\t\tthis.state = { //state is something that can chnage\r\n\t\t\trobots: [],\r\n\t\t\tsearchfield: ''\t\t\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount() { //prebuild componentDidMount method\r\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\r\n\t\t\t.then(response => response.json())\r\n\t\t\t.then(users => this.setState({robots: users}));\r\n\t\t//this.setState({robots: robots})\r\n\t}\r\n\r\n\tonSearchChange = (event) => { //creating own function\t\t\r\n\t\tthis.setState({ searchfield: event.target.value }) //prebuild setState\t\t\r\n\t}\r\n\r\n\trender(){ //prebuild render method\r\n\r\n\t\tconst {robots, searchfield} = this.state;\r\n\r\n\t\tconst filteredRobots = robots.filter( robot => {\r\n\t\t\treturn robot.name.toLowerCase().includes(searchfield.toLowerCase())\r\n\t\t})\r\n\r\n\t\t//if(!robots.length) { //if !(robots === 0)\r\n\t\t//\treturn <h1>Loading...</h1>\r\n\t\t//}else{\r\n\t\t//\treturn (\r\n\t\t//\t\t<div className='tc'>\r\n\t\t//\t\t\t<h1 className='f1'>RoboFriends</h1>\r\n\t\t//\t\t\t<SearchBox searchChange={this.onSearchChange} />\r\n\t\t//\t\t\t<Scroll>\r\n\t\t//\t\t\t\t<CardList robots={filteredRobots} />\r\n\t\t//\t\t\t</Scroll>\r\n\t\t//\t\t</div>\r\n\t\t//\t);\r\n\t\t//}\r\n\r\n\t\treturn !robots.length \r\n\t\t?\t<h1>Loading...</h1>\r\n\t\t:\t<div className='tc'>\r\n\t\t\t\t<h1 className='f1'>RoboFriends</h1>\r\n\t\t\t\t<SearchBox searchChange={this.onSearchChange} />\r\n\t\t\t\t<Scroll>\r\n\t\t\t\t\t<CardList robots={filteredRobots} />\r\n\t\t\t\t</Scroll>\r\n\t\t\t</div>\t\t\r\n\t}\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './containers/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'tachyons';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n  \t<App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}